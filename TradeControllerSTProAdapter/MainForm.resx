<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="StatusStrip.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>